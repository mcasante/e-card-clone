# name: Deploy

# on:
#   pull_request:
#     branches:
#       - main

# env:
#   BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

# jobs:
#   sonarqube:
#     if: ${{ !(contains(github.event.pull_request.title, 'skip sonar-scan')) }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Sonarqube Scan
#         uses: sonarsource/sonarqube-scan-action@master
#         with:
#           args: >
#             -Dsonar.branch.name=${{env.BRANCH_NAME}}
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

#       - name: Sonarqube Gate
#         uses: sonarsource/sonarqube-quality-gate-action@master
#         if: ${{ !(contains(github.event.pull_request.title, 'skip sonar-gate')) }}
#         timeout-minutes: 5
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#   release:
#     if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) || contains(github.event.pull_request.title, 'skip sonar-scan') }}
#     runs-on: ubuntu-latest
#     needs: [sonarqube]
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - uses: pnpm/action-setup@v2.0.1
#         with:
#           version: 7

#       - uses: actions/setup-node@v3
#         with:
#           node-version: "16"
#           cache: "pnpm"

#       - name: Install Dependecies
#         run: |
#           echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
#           pnpm install --frozen-lockfile

#       - name: Release new version
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: HUSKY=0 pnpm release
